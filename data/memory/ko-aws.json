{
  "memoryTitle": "AWS Certified Developer - Associate Practice Test",
  "questions": [
    {
      "id": 1,
      "type": "memory-card",
      "question": "한 회사가 Amazon EC2 인스턴스에 애플리케이션을 구현하고 있습니다. 애플리케이션은 들어오는 트랜잭션을 처리해야 합니다. 애플리케이션이 유효하지 않은 거래를 감지하면 애플리케이 션은 회사 지원팀에 채팅 메시지를 보내야 합니다. 메시지를 보내려면 애플리케이션이 채팅 API를 사용하여 인증할 액세스 토큰을 검색해야 합니다. 개발자는 액세스 토큰을 저장하는 솔루션을 구현해야 합니다. 액세스 토큰은 저장 및 전송 중에 암호화되어야 합니다. 액세스 토큰은 다른 AWS 계정에서도 액세스할 수 있어야 합니다. 최소한의 관리 오버헤드로 이러한 요구 사항을 충족하는 솔루션은 무엇입니까?",
      "answers": [
        {
          "number": 3,
          "content": "AWS Key Management Service(AWS KMS) 고객 관리형 키와 함께 AWS Secrets Manager를 사용하여 액세스 토큰을 저장합니다. 다른 계정의 액세스를 허용하려면 보안 비밀에 리소스 기반 정책을 추가하세요. Secrets Manager에 액세스할 수 있는 권한으로 EC2 인스턴스의 IAM 역할을 업데이트합니다. Secrets Manager에서 토큰을 검색합니다. 해독된 액세스 토큰을 사용하여 메시지를 채팅에 보냅니다."
        }
      ],
      "explanation": {
        "데이터 보안": "AWS Key Management Service(AWS KMS)와 AWS Secrets Manager를 사용하여 액세스 토큰을 암호화하여 저장하고, 저장 및 전송 중에도 보호.",
        "권한 관리": "EC2 인스턴스의 IAM 역할을 업데이트하여 AWS Secrets Manager에서 액세스 토큰을 안전하게 검색할 수 있도록 설정.",
        "Cross-account 접근": "Secrets Manager의 리소스 기반 정책을 활용하여 다른 AWS 계정에서도 접근 가능하도록 구성.",
        "운영 효율성": "Secrets Manager를 사용하면 별도의 키 관리 없이 안전한 토큰 저장 및 자동 회전 기능 제공, 관리 부담 감소.",
        "실시간 인증": "애플리케이션이 필요할 때 즉시 Secrets Manager에서 액세스 토큰을 검색하고 해독하여 실시간으로 채팅 API에 인증 가능."
      }
    },
    {
      "id": 2,
      "type": "memory-card",
      "question": "한 회사가 여러 AWS 계정에서 Amazon EC2 인스턴스를 실행하고 있습니다. 개발자는 EC2 인스턴스의 모든 수명 주기 이벤트를 수집하는 애플리케이션을 구현해야 합니다. 애플리케이션 은 추가 처리를 위해 회사의 기본 AWS 계정에 있는 단일 Amazon Simple Queue Service(Amazon SQS) 대기열에 수명 주기 이벤트를 저장해야 합니다. 어떤 솔루션이 이러한 요구 사항을 충족합니까?",
      "answers": [
        {
          "number": 4,
          "content": "모든 계정에서 이벤트를 수신하도록 기본 계정 이벤트 버스에 대한 권한을 구성합니다. 각 계정에서 Amazon EventBridge 규칙을 생성하여 모든 EC2 인스턴스 수명 주기 이벤틀르 기본 계정 이벤트 버스로 보냅니다. 모든 EC2 인스턴스 수명 주기 이벤트와 일치하는 기본 계정 이벤트 버스에 EventBridge 규칙을 추가합니다. SQS대기열을 규칙의 대상으로 설정합니다."
        }
      ],
      "explanation": {
        "보안 유지": "Amazon EventBridge를 활용하여 각 계정에서 기본 계정의 이벤트 버스로 EC2 인스턴스 수명 주기 이벤트를 안전하게 전달.\nSQS 대기열을 대상으로 설정하여 이벤트가 보호된 상태에서 수집됨.",
        "권한 기반 접근 제어": "기본 계정의 이벤트 버스에 대한 권한을 구성하여 다른 AWS 계정에서 이벤트를 보낼 수 있도록 설정.\nEventBridge 규칙을 활용하여 EC2 인스턴스 수명 주기 이벤트를 안전하게 필터링 및 전달.",
        "다른 AWS 계정에서도 접근 가능": "모든 AWS 계정에서 기본 계정의 이벤트 버스로 이벤트를 전송할 수 있도록 Cross-account EventBridge 권한을 구성.",
        "관리 오버헤드 최소화": "각 계정에 EventBridge 규칙을 설정하면 이벤트가 자동으로 기본 계정으로 전송되므로 추가적인 Lambda 함수나 폴링 작업이 필요 없음.",
        "실시간 검색 및 사용 가능": "EC2 인스턴스의 모든 수명 주기 이벤트가 실시간으로 기본 계정의 SQS 대기열에 저장되므로 빠른 검색과 처리가 가능."
      }
    },
    {
      "id": 3,
      "type": "memory-card",
      "question": "애플리케이션은 보안 액세스를 위해 Amazon Congnito 사용자 풀과 자격 증명 풀을 사용하고 있습니다. 개발자는 애플리케이션의 사용자별 파일 업로드 및 다운로드 기능을 Amazon S3와 통합하려고 합니다. 개발자는 파일이 안전한 방식으로 저장 및 검색되고 사용자가 자신의 파일에만 액세스할 수 있는지 확인해야 합니다. 파일 크기는 3KB에서 300MB까지 다릅니다. 가장 높은 수준의 보안으로 이러한 요구 사항을 충족하는 옵션은 무엇입니다?",
      "answers": [
        {
          "number": 4,
          "content": "Amazon Cognito 자격 증명 접두사 내의 IAM 정책을 사용하여 사용자가 Amazon S3에서 자신의 폴더를 사용하도록 제한합니다."
        }
      ],
      "explanation": {
        "데이터 보호": "Amazon Cognito 자격 증명 풀을 활용하여 사용자를 인증하고, 각 사용자가 자신의 S3 폴더에만 접근할 수 있도록 IAM 정책을 적용하여 보안 유지.",
        "접근 제어": "IAM 정책을 사용하여 Cognito 사용자 ID를 기반으로 S3 폴더를 할당하고, 해당 사용자만 자신의 폴더에 업로드 및 다운로드 가능하도록 제한.",
        "격리된 저장소": "각 사용자가 고유한 S3 경로(예: 's3://bucket-name/user-id/')에만 접근하도록 설정하여 데이터 격리 보장.",
        "관리 편의성": "IAM 정책과 Cognito의 연동을 통해 별도의 인증 및 접근 제어 로직을 구현할 필요 없이 자동 관리 가능.",
        "성능 및 확장성": "S3는 대용량 파일(최대 300MB)까지 효율적으로 저장 및 제공할 수 있으며, Cognito와 IAM을 활용한 접근 제어로 성능 저하 없이 확장 가능."
      }
    },
    {
      "id": 4,
      "type": "memory-card",
      "question": "한 회사는 개발 속도와 민첩성을 높이기 위해 AWS 서비스를 사용하여 확장 가능한 데이터 관리 솔루션을 구축하고 있습니다. 이 솔루션은 다양한 소스에서 대량의 데이터를 수집하고 여러 비 즈니스 규칙 및 변환을 통해 이 데이터를 처리합니다. 솔루션에서는 비즈니스 규칙이 순서대로 실행되고 비즈니스 규칙 실행 시 오류가 발생할 경우 데이터 재처리를 처리해야 합니다. 회사는 확장 가능하고 유지 관리가 최소한으로 필요한 솔루션 이 필요합니다. 이러한 요구 사항을 충족하기 위해 회사는 데이터 흐름의 조정을 관리하고 자동화하기 위해 어떤 AWS 서비스를 사용해야 합니까?",
      "answers": [
        {
          "number": 2,
          "content": "AWS 단계 함수"
        }
      ],
      "explanation": {
        "워크플로우 관리": "AWS Step Functions를 사용하여 데이터 처리 흐름을 조정하고, 비즈니스 규칙을 순차적으로 실행하도록 설정.",
        "오류 처리": "비즈니스 규칙 실행 중 오류 발생 시 자동으로 데이터 재처리 가능하도록 상태 머신 내에서 재시도 및 예외 처리 로직 구현.",
        "확장성": "AWS Step Functions는 서버리스 아키텍처로 자동 확장되며, 대량의 데이터를 효율적으로 처리 가능.",
        "운영 효율성": "코드 변경 없이 상태 머신을 업데이트할 수 있어 유지 관리 부담 최소화.",
        "자동화 및 조정": "Step Functions가 여러 AWS 서비스와 통합되어 데이터 수집, 변환 및 처리를 자동화하고 조정 가능."
      }
    },
    {
      "id": 5,
      "type": "memory-card",
      "question": "개발자가 Python으로 작성된 AWS Lambda 함수를 생성했습니다. Lambda 함수는 Amazon S3의 객체에서 데이터를 읽고 Amazon DynamoDB 테이블에 데이터를 씁니다. 객체가 생성되면 S3 이벤트 알림에서 함수가 성공적으로 호출됩니다. 그러나 DynamoDB 테이블에 쓰려고 하면 함수가 실패합니다. 이 문제의 가장 가능성 있는 원인은 무엇입니까?",
      "answers": [
        {
          "number": 3,
          "content": "Lambda 함수에는 DynamoDB에 쓸 수 있는 IAM 권한이 없습니다."
        }
      ],
      "explanation": {
        "문제 원인": "Lambda 함수가 DynamoDB 테이블에 데이터를 쓰려고 하지만, 필요한 IAM 권한이 부족하여 실패함.",
        "권한 관리": "Lambda 함수에 적절한 IAM 역할과 정책을 추가하여 DynamoDB에 쓰기 권한을 부여해야 함.",
        "해결 방법": "IAM 정책을 업데이트하여 Lambda 함수에 'dynamodb:PutItem' 또는 'dynamodb:UpdateItem' 권한을 추가.",
        "보안 고려": "최소 권한 원칙(Least Privilege)을 준수하여 Lambda 함수가 필요한 최소한의 DynamoDB 작업만 수행하도록 제한.",
        "운영 안정성": "권한 문제를 해결하면 Lambda 함수가 정상적으로 실행되며, S3 이벤트 트리거 후 데이터가 DynamoDB 테이블에 성공적으로 저장됨."
      }
    },
    {
      "id": 6,
      "type": "memory-card",
      "question": "개발자가 여러 AWS 계정에 Amazon EC2 인스턴스를 배포하기 위해 AWS CloudFormation 템플릿을 생성하고 있습니다. 개발자는 승인된 인스턴스 유형 목록에서 EC2 인스턴스를 선택해야 합니다. 개발자는 승인된 인스턴스 유형 목록을 CloudFormation 템플릿에 어떻게 통합할 수 있습니까?",
      "answers": [
        {
          "number": 4,
          "content": "CloudFormation 템플릿에서 EC2 인스턴스 유형 목록을 AllowedValues로 사용하여 매개변수를 생성합니다."
        }
      ],
      "explanation": {
        "제어된 배포": "CloudFormation 템플릿에서 'AllowedValues'를 사용하여 승인된 EC2 인스턴스 유형 목록을 정의하면, 사용자가 선택할 수 있는 옵션을 제한할 수 있음.",
        "유연한 구성": "매개변수(Parameter)를 통해 특정 계정과 요구사항에 맞는 인스턴스 유형을 선택할 수 있도록 구성 가능.",
        "보안 및 규정 준수": "승인된 인스턴스 유형만 허용하여 비용 관리 및 보안 정책을 준수할 수 있도록 함.",
        "배포 일관성": "모든 AWS 계정에서 동일한 CloudFormation 템플릿을 사용하여 일관된 인프라 배포 가능.",
        "운영 간소화": "템플릿을 수정하지 않고도 매개변수를 활용하여 유연하게 인스턴스 유형을 변경 가능, 유지 관리 부담 감소."
      }
    },
    {
      "id": 7,
      "type": "memory-card",
      "question": "개발자에게는 BatchGetItem 하위 수준 API 작업을 사용하여 Amazon DynamoDB에 직접 일괄 요청을 보내는 애플리케이션이 있습니다. 응답은 UnprocessedKeys 요소의 값을 반 환하는 경우가 많습니다. 일괄 응답에 UnprocessedKeys의 값이 포함된 경우 애플리케이션의 복원력을 높이기 위해 개발자는 어떤 조치를 취해야 합니까? (2개를 선택하세요.)",
      "answers": [
        {
          "number": 2,
          "content": "지수 백오프 및 무작위 지연을 사용하여 일괄 작업을 다시 시도합니다."
        },
        {
          "number": 4,
          "content": "작업이 액세스하는 DynamoDB 테이블의 프로비저닝된 읽기 용량을 늘립니다."
        }
      ],
      "explanation": {
        "재시도 전략": "지수 백오프 및 무작위 지연을 적용하여 UnprocessedKeys가 포함된 경우 자동으로 일괄 요청을 다시 시도하여 애플리케이션의 복원력을 높임.",
        "성능 최적화": "DynamoDB 테이블의 프로비저닝된 읽기 용량을 증가시켜 처리량을 높이고, UnprocessedKeys가 발생하는 빈도를 줄임.",
        "오류 방지": "과부하 상태에서 요청을 즉시 재시도하지 않고, 일정한 지연을 적용하여 DynamoDB의 처리 부담을 완화.",
        "확장성 보장": "읽기 용량을 동적으로 조정하면 대량의 BatchGetItem 요청을 보다 안정적으로 처리할 수 있음.",
        "운영 안정성": "두 가지 접근 방식을 함께 사용하면 애플리케이션의 내구성을 높이고, DynamoDB 쿼리 실패율을 최소화할 수 있음."
      }
    },
    {
      "id": 8,
      "type": "memory-card",
      "question": "회사는 Amazon API Gateway를 사용하여 액세스되는 온프레미스 Linux 서버 세트에서 사용자 지정 애플리케이션을 실행하고 있습니다. API 테스트 단계에서 AWS X-Ray 추적이 활성 화되었습니다. 개발자는 최소한의 구성으로 온프레미스 서버에서 X-Ray 추적을 활성화하려면 어떻게 해야 합니까?",
      "answers": [
        {
          "number": 2,
          "content": "온프레미스 서버에 X-Ray 데몬을 설치하고 실행하여 데이터를 캡처하고 X-Ray 서비스에 전달합니다."
        }
      ],
      "explanation": {
        "추적 활성화": "온프레미스 서버에 AWS X-Ray 데몬을 설치하고 실행하면, API Gateway 요청과 연결된 추적 데이터를 수집할 수 있음.",
        "최소한의 구성": "X-Ray 데몬은 별도의 코드 수정 없이 실행 가능하며, 간단한 설정만으로 AWS X-Ray 서비스와 연동됨.",
        "실시간 모니터링": "온프레미스 애플리케이션에서 요청의 지연 시간, 오류, 성능 지표 등을 실시간으로 분석 가능.",
        "확장성": "여러 온프레미스 서버에서 동일한 방식으로 X-Ray 데몬을 실행하면 분산된 환경에서도 추적 데이터를 통합 가능.",
        "운영 가시성": "API Gateway와 온프레미스 애플리케이션 간의 호출을 시각화하여 성능 최적화 및 문제 해결에 도움을 줌."
      }
    },
    {
      "id": 9,
      "type": "memory-card",
      "question": "회사에서 제3자와 정보를 공유하고 싶어합니다. 타사에는 회사가 정보를 공유하는 데 사용할 수 있는 HTTP API 엔드포인트가 있습니다. 회사는 HTTP API에 액세스하는 데 필요한 API 키 를 가지고 있습니다. 회사에서는 코드를 이용하여 API Key를 관리할 수 있는 방법이 필요합니다. API 키와 애플리케이션 코드의 통합은 애플리케이션 성능에 영향을 미칠 수 없습니다. 이러한 요구 사항을 가장 안전하게 충족하는 솔루션은 무엇입니까?",
      "answers": [
        {
          "number": 1,
          "content": "AWS Secrets Manager에 API 자격 증명을 저장합니다. AWS SDK를 사용하여 런타임 시 API 자격 증명을 검색합니다. 자격 증명을 사용하여 API 호출을 수행합니다."
        }
      ],
      "explanation": {
        "보안 유지": "AWS Secrets Manager를 사용하여 API 키를 안전하게 저장하고, 저장 및 전송 중에 암호화하여 보호.",
        "실시간 검색": "AWS SDK를 사용하여 애플리케이션 실행 중에 필요한 시점에 API 키를 검색하여 활용 가능.",
        "성능 최적화": "Secrets Manager는 API 호출 시 캐싱을 지원하여 성능 저하 없이 자격 증명을 검색 가능.",
        "자동화 및 관리": "Secrets Manager는 API 키의 자동 회전 기능을 제공하여 보안 유지 및 관리 부담 감소.",
        "외부 서비스 연동": "저장된 API 키를 활용하여 HTTP API 엔드포인트에 안전하게 요청을 보낼 수 있도록 설정."
      }
    },
    {
      "id": 10,
      "type": "memory-card",
      "question": "개발자가 Amazon Elastic Container Service(Amazon ECS)에 새 애플리케이션을 배포하고 있습니다. 개발자는 다양한 유형의 변수를 안전하게 저장하고 검색해야 합니다. 이러한 변 수에는 원격 API에 대한 인증 정보, API에 대한 URL 및 자격 증명이 포함됩니다. 인증 정보와 API URL은 개발, 테스트 및 프로덕션 환경 전반에 걸쳐 현재 및 향후 배포되는 모든 애플리케 이션 버전에서 사용할 수 있어야 합니다. 개발자는 애플리케이션 변경이 가장 적은 변수를 어떻게 검색해야 합니까?",
      "answers": [
        {
          "number": 1,
          "content": "AWS Systems Manager Parameter Store에서 변수를 검색하도록 애플리케이션을 업데이트하십시오. 각 환경의 각 변수에 대해 Parameter Store의 고유한 경로를 사용하십시\n오. 각 환경의 AWS Secrets Manager에 자격 증명을 저장합니다."
        }
      ],
      "explanation": {
        "변수 관리": "AWS Systems Manager Parameter Store를 사용하여 환경별로 변수를 저장하고, 애플리케이션에서 이를 동적으로 검색하여 활용.",
        "보안 유지": "AWS Secrets Manager를 사용하여 자격 증명을 안전하게 저장하고, 필요 시 런타임에 검색하여 인증 정보를 보호.",
        "환경 분리": "각 환경(개발, 테스트, 프로덕션)에 대해 Parameter Store에서 고유한 경로를 사용하여 환경별 변수 관리 가능.",
        "운영 효율성": "애플리케이션 변경 없이 새로운 변수 추가 및 업데이트 가능, 유지보수 부담 최소화.",
        "확장성": "Parameter Store와 Secrets Manager를 함께 활용하여 다양한 환경과 애플리케이션 버전에서 재사용 가능."
      }
    }
  ]
}
